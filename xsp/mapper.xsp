%module{Google::ProtocolBuffers::Dynamic};
%package{Google::ProtocolBuffers::Dynamic::Mapper};

#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

#include "mapper.h"

%{

SV*
decode_to_perl(SV *klass, SV *scalar)
  INIT:
    gpd::Mapper *mapper = (gpd::Mapper *) CvXSUBANY(cv).any_ptr;
    STRLEN bufsize;
    const char *buffer = SvPV(scalar, bufsize);
  CODE:
    RETVAL = mapper->decode_to_perl(buffer, bufsize);

    if (!RETVAL) {
        sv_2mortal(RETVAL);
        croak("Deserialization failed");
    }
  OUTPUT: RETVAL

SV*
encode_from_perl(SV *klass, SV *ref)
  INIT:
    gpd::Mapper *mapper = (gpd::Mapper *) CvXSUBANY(cv).any_ptr;
  CODE:
    RETVAL = mapper->encode_from_perl(ref);

    if (!RETVAL) {
        sv_2mortal(RETVAL);
        croak("Serialization failed");
    }
  OUTPUT: RETVAL

%}
